<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>